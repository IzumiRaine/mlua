error[E0277]: the type `std::cell::UnsafeCell<mlua::lua::ExtraData>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
   --> $DIR/ref_nounwindsafe.rs:8:5
    |
8   |     catch_unwind(move || table.set("a", "b").unwrap());
    |     ^^^^^^^^^^^^ `std::cell::UnsafeCell<mlua::lua::ExtraData>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
    |
    = help: within `std::cell::RefCell<mlua::lua::ExtraData>`, the trait `std::panic::RefUnwindSafe` is not implemented for `std::cell::UnsafeCell<mlua::lua::ExtraData>`
    = note: required because it appears within the type `std::cell::RefCell<mlua::lua::ExtraData>`
    = note: required because of the requirements on the impl of `std::panic::UnwindSafe` for `std::rc::Rc<std::cell::RefCell<mlua::lua::ExtraData>>`
    = note: required because it appears within the type `mlua::lua::Lua`
    = note: required because it appears within the type `mlua::types::LuaRef`
    = note: required because it appears within the type `mlua::table::Table`
    = note: required because it appears within the type `[closure@$DIR/tests/compile_fail/ref_nounwindsafe.rs:8:18: 8:54 table:mlua::table::Table]`

error[E0277]: the type `std::cell::UnsafeCell<isize>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
   --> $DIR/ref_nounwindsafe.rs:8:5
    |
8   |     catch_unwind(move || table.set("a", "b").unwrap());
    |     ^^^^^^^^^^^^ `std::cell::UnsafeCell<isize>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary
    |
    = help: within `std::cell::RefCell<mlua::lua::ExtraData>`, the trait `std::panic::RefUnwindSafe` is not implemented for `std::cell::UnsafeCell<isize>`
    = note: required because it appears within the type `std::cell::Cell<isize>`
    = note: required because it appears within the type `std::cell::RefCell<mlua::lua::ExtraData>`
    = note: required because of the requirements on the impl of `std::panic::UnwindSafe` for `std::rc::Rc<std::cell::RefCell<mlua::lua::ExtraData>>`
    = note: required because it appears within the type `mlua::lua::Lua`
    = note: required because it appears within the type `mlua::types::LuaRef`
    = note: required because it appears within the type `mlua::table::Table`
    = note: required because it appears within the type `[closure@$DIR/tests/compile_fail/ref_nounwindsafe.rs:8:18: 8:54 table:mlua::table::Table]`
